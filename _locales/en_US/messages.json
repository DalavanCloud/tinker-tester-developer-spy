{
  "addonDescription": {
    "message": "Handy diagnosis tools for figuring out how web sites work"
  },
  "addonName": {
    "message": "Tinker Tester Developer Spy"
  },

  "apiAnnounceKey": {
    "message": "TinkerTesterDeveloperSpy is available as window['KEY']"
  },

  "bgBypassingCORSHeader": {
    "message": "Bypassing $1=$2 for $3"
  },
  "bgWebPDecoded": {
    "message": "Decoded WebP image at $1"
  },
  "bgWebPDecodingError": {
    "message": "Error decoding WebP image at $1"
  },
  "bgExceptionOverridingURL": {
    "message": "Exception thrown while overriding network request to $1 with $2"
  },
  "bgFailureOverridingURL": {
    "message": "HTTP failure status $1 received while overriding network request to $1 with $2"
  },
  "bgOverridingURL": {
    "message": "Overriding network request to $1 with $2"
  },

  "callbackOnCreated": {
    "message": "On Created"
  },
  "callbackOnDetected": {
    "message": "On Detected"
  },
  "callbackOnLost": {
    "message": "On Lost"
  },
  "callbackOnEventFired": {
    "message": "On Event Fired"
  },
  "callbackOnGet": {
    "message": "On Get"
  },
  "callbackOnListenerAdded": {
    "message": "On Listener Added"
  },
  "callbackOnListenerRemoved": {
    "message": "On Listener Removed"
  },
  "callbackOnSend": {
    "message": "On Send"
  },
  "callbackOnSet": {
    "message": "On Set"
  },

  "flagSyncXHRPolyfix": {
    "message": "Enable sync XHR polyfix"
  },

  "hookLabelCORSBypass": {
    "message": "Bypass Site CORS settings"
  },
  "hookLabelDetectUAChecks": {
    "message": "Detect UA sniffing"
  },
  "hookLabelDocumentWrite": {
    "message": "document.write"
  },
  "hookLabelDisableDebugger": {
    "message": "Disable debugger keyword"
  },
  "hookLabelWebP": {
    "message": "Enable WebP support"
  },
  "hookLabelFunctionBind": {
    "message": "function.bind helper"
  },
  "hookLabelGeolocation": {
    "message": "Geolocation"
  },
  "hookLabelInputsAndLinks": {
    "message": "Inputs and Links"
  },
  "hookLabelElementCreation": {
    "message": "Element Creation"
  },
  "hookLabelElementDetection": {
    "message": "Element Detection"
  },
  "hookLabelEventListener": {
    "message": "Event Listener"
  },
  "hookLabelEventFeatures": {
    "message": "Event Features"
  },
  "hookLabelStyleProperties": {
    "message": "element.style"
  },
  "hookLabelMediaElements": {
    "message": "Audio/Video"
  },
  "hookLabelObserveXHRandFetch": {
    "message": "XHR and Fetches"
  },
  "hookLabelOverrideLanguages": {
    "message": "Override Languages"
  },
  "hookLabelOverrideNetworkRequests": {
    "message": "Override Network Requests"
  },
  "hookLabelOverrideRequestHeaders": {
    "message": "Override Request Headers"
  },
  "hookLabelScrolling": {
    "message": "Scrolling"
  },
  "hookLabelShadowDOM": {
    "message": "Shadow DOM"
  },
  "hookLabelScheduling": {
    "message": "Task Scheduling"
  },
  "hookLabelUserAgentOverrides": {
    "message": "Spoof User Agent"
  },

  "logBoundFunctionCalled": {
    "message": "bound function called"
  },
  "logCalledWithArgs": {
    "message": "called with args"
  },
  "logElementCreated": {
    "message": "element created"
  },
  "logElementDetected": {
    "message": "element detected"
  },
  "logElementLost": {
    "message": "element lost"
  },
  "logEventFiredOn": {
    "message": "event fired on"
  },
  "logGetterAccessed": {
    "message": "accessed"
  },
  "logIgnoringCall": {
    "message": "ignoring call"
  },
  "logIgnoringEvent": {
    "message": "event being ignored on"
  },
  "logIgnoringListenerAddedOn": {
    "message": "listener addition being ignored on"
  },
  "logIgnoringListenerRemovedFrom": {
    "message": "listener removal being ignored from"
  },
  "logInvalidFunctionBind": {
    "message": "Function.prototype.bind requires a callable object"
  },
  "logListenerAddedOn": {
    "message": "listener add attempted on"
  },
  "logListenerRemovedFrom": {
    "message": "listener removal attempted from"
  },
  "logSetterCalled": {
    "message": "set to"
  },

  "noteOverrideNetworkRequests": {
    "message": "File URLs are not currently supported. For overrides to take effect, you may need to hard-refresh the page (press ctrl/cmd-shift-r, or shift-click or long-tap the refresh button)."
  },

  "optionElementNames": {
    "message": "Element names"
  },
  "optionElementSelector": {
    "message": "CSS selector to match"
  },
  "optionEventTypes": {
    "message": "Event types"
  },
  "optionGeolocationAccuracy": {
    "message": "Accuracy"
  },
  "optionGeolocationAltitude": {
    "message": "Altitude"
  },
  "optionGeolocationAltitudeAccuracy": {
    "message": "Altitude accuracy"
  },
  "optionGeolocationHeading": {
    "message": "Heading"
  },
  "optionGeolocationLatitude": {
    "message": "Latitude"
  },
  "optionGeolocationLongitude": {
    "message": "Longitude"
  },
  "optionGeolocationSpeed": {
    "message": "Speed"
  },
  "optionHeaderName": {
    "message": "Header name"
  },
  "optionHeaderValue": {
    "message": "Header value"
  },
  "optionLanguages": {
    "message": "Accept-Language header value"
  },
  "optionOnlyHTTPMethods": {
    "message": "Only for these HTTP methods"
  },
  "optionOnlyIfElementMatches": {
    "message": "Only if element matches"
  },
  "optionOnlyIfValueMatches": {
    "message": "Only if value matches"
  },
  "optionOnlyIfTargetMatches": {
    "message": "Only if target matches"
  },
  "optionOnlyURLs": {
    "message": "Only if URL matches regex"
  },
  "optionStylePropertiesToMonitor": {
    "message": "Style properties to monitor"
  },
  "optionURLRedirect": {
    "message": "Redirect URL or raw text"
  },
  "optionURLRegex": {
    "message": "URL regex to match"
  },

  "popupApplyHook": {
    "message": "Apply"
  },
  "popupAvailableHooks": {
    "message": "Available Hooks"
  },
  "popupCancel": {
    "message": "Cancel"
  },
  "popupDisableHook": {
    "message": "Disable"
  },
  "popupDoNothing": {
    "message": "Do nothing"
  },
  "popupHide": {
    "message": "Hide"
  },
  "popupIgnore": {
    "message": "Ignore"
  },
  "popupLogStackTrace": {
    "message": "Log stack trace"
  },
  "popupStartDebugger": {
    "message": "Start debugger"
  },
  "popupUnavailableForAboutPages": {
    "message": "Unavailable for about: pages"
  },
  "popupUnsetHook": {
    "message": "unset"
  },
  "popupUpdateHook": {
    "message": "Update"
  },

  "typeOverrideNetworkRequestRedirectURL": {
    "message": "Redirect URL"
  },
  "typeOverrideNetworkRequestRawText": {
    "message": "Raw Text"
  },
  "typeOverrideRequestHeaderAlwaysSet": {
    "message": "Always set"
  },
  "typeOverrideRequestHeaderOnlyOverride": {
    "message": "Only override"
  },

  "uaChromeAndroidPhone": {
    "message": "Chrome 68 (Android Phone)"
  },
  "uaChromeAndroidTablet": {
    "message": "Chrome 68 (Android Tablet)"
  },
  "uaChromeLinux": {
    "message": "Chrome 68 (Linux)"
  },
  "uaChromeOSX": {
    "message": "Chrome 68 (OSX)"
  },
  "uaChromeWindows": {
    "message": "Chrome 68 (Windows)"
  },
  "uaEdge": {
    "message": "Edge 42 (Windows)"
  },
  "uaFirefoxAndroidPhone": {
    "message": "Firefox 61 (Android Phone)"
  },
  "uaFirefoxAndroidTablet": {
    "message": "Firefox 61 (Android Tablet)"
  },
  "uaSafariOSX": {
    "message": "Safari 11.1.2 (OSX)"
  }
}
